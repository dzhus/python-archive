* Требования [100%]
- [X] перемещение объекта с возможностью выхода за экран
- [X] масштабирование относительно произвольной точки
- [X] поворот относительно произвольной точки
- [X] движение по графику функции
- [X] перекатывание по произвольной прямой
* Шаги реализации
** DONE Создание класса рисуемой фигуры
   CLOSED: [2007-04-15 Вск 16:03]
Хранить координаты точек можно в полярных или декартовых
координатах.

О полярной системе:
  1. Поворот фигуры выполняется на уровне объекта фигуры - вращением
     базовой точки по декартовой формуле и сложением углов всех точек
     с углом вращения.
  2. Масштабирование фигуры можно выполнить сдвигом базовой точки по
     декартовой формуле; расстояния надо преобразовывать иначе, так
     как коэффициенты масштабирования не равны (если равны, можно
     просто умножить все расстояния на этот коэффициент).

О декартовой системе:
  1. Не нужно преобразовывать координаты из полярных в картезианские.
  2. Трансформации выполняются на уровне контекста рисования
     объекта фигуры.

Класс фигуры содержит basepoint для неё в пользовательской системе координат
** Переработка класса функции
   Сейчас это не совсем красиво.
** DONE [#A] Реализация преобразований и интерфейса к ним
   CLOSED: [2007-05-09 Срд 11:04]
*** Общие заметки по реализации
    Простейшие преобразования (масштабирование и вращение) можно
    выполнить путём изменения центра пользовательских координат и
    вызова методов `rotate()` и `scale()` контекста.

    Для организации переноса можно хранить координаты базовой точки
    фигуры в пользовательских декартовых координатах, при переносе
    мышкой использовать `device_to_user_distance()`: 

           c_device = c_user - (origin_c_user - origin_c_device)
           c_user = c_device + (origin_c_user - origin_c_device)

    При клике по зоне рисования переводить координаты из `device` в
    `user`.

    Аффинные преобразования контекста нужно выполнять каждый раз
    отдельно в методе рисования фигуры, тогда не будет проблем с
    отрисовкой полупрозрачной копии.

    Когда центр преобразования не совпадает с базовой точкой,
    "Перемещение" может дать не самый ожидаемый результат. Режим
    "перемещение" сдвигает всю систему целиком, а установка нового
    центра преобразования изменяет и выбранные деформации! Возможно,
    нужно фиксировать центр преобразований соответствующим режимом, а
    режимом "перемещение" сдвигать базовую точку, возможно
    пересчитывая её координаты (потребуется более сложное
    преобразование). В таком случае, при перемещении центр остаётся
    неподвижным относительно `device`, так что будет меняться и
    изображение фигуры!

*** DONE Хранимые данные
    Потребуется хранить информацию о двух точках: центре
    преобразования (вращения, масштабирования) (в координатах зоны
    рисования) и basepoint фигуры относительно пользовательских координат.
*** DONE Возможность перемещения фигуры стрелками
    CLOSED: [2007-05-09 Срд 11:04]
    Реализовано, SHIFT+стрелки.
*** DONE Вывод центра координат
    CLOSED: [2007-04-19 Чтв 00:30]
** DONE [#B] Follow the график
  Перемещение по графику можно сделать простым переносом центра
  пользовательской системы координат. При переходе в режим движения
  по графику - сбрасывать все трансформации и явно устанавливать
  начальные условия.

  Требуется отрисовывать график самой функции во время
  движения. Возможно, понадобится полная перерисовка всего графика
  или только его области. (Может сохранять отрисованный в самом
  начале график в буфере в памяти, а потом его на каждом шаге
  движения быстро выводить в область изображения).
*** DONE Отрисовка графика
*** DONE Возможность приостановки фигуры во время движения
** DONE [#D] Перекатывание
   CLOSED: [2007-05-28 Пнд 21:40]
   Был использован самый тупой вариант реализации из возможных.
