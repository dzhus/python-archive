# do not edit -- automatically generated by arch changelog
# arch-tag: automatic-ChangeLog--mail@sphinx.net.ru--dev/python--drawing--2007
#

2007-05-28 17:42:54 GMT	Dmitry Dzhus <mail@sphinx.net.ru>	patch-16

    Summary:
      Rolling implemented
    Revision:
      python--drawing--2007--patch-16

    Dumb rolling implemented. Shitty indeed.

    modified files:
     ROADMAP drawing.py glade/drawing.glade shape_sign.py


2007-05-09 08:29:43 GMT	Dmitry Dzhus <mail@sphinx.net.ru>	patch-15

    Summary:
      Colors revised
    Revision:
      python--drawing--2007--patch-15

    Now taxi sign shape uses Tango palette colors instead of innatural blue,
    white and black.

    modified files:
     ROADMAP shape_sign.py


2007-05-07 19:54:45 GMT	Dmitry Dzhus <mail@sphinx.net.ru>	patch-14

    Summary:
      BUGFIX of last two revisions
    Revision:
      python--drawing--2007--patch-14

    Last two revisions were broken due to the lack of function.py in tla
    tree. This is fixed now.

    new files:
     .arch-ids/function.py.id .arch-ids/photo.xcf.id function.py
     photo.xcf


2007-04-27 20:19:36 GMT	Dmitry Dzhus <mail@sphinx.net.ru>	patch-13

    Summary:
      Better car shape
    Revision:
      python--drawing--2007--patch-13

    Wheels are drawn with curves now too.

    modified files:
     shape_sign.py


2007-04-26 20:49:32 GMT	Dmitry Dzhus <mail@sphinx.net.ru>	patch-12

    Summary:
      Func class moved to separate file; shape drawing class renewed
    Revision:
      python--drawing--2007--patch-12

    Now curves are used instead of straight lines to draw taxi car.

    modified files:
     drawing.py glade/drawing.glade shape_sign.py


2007-04-26 15:24:20 GMT	Dmitry Dzhus <mail@sphinx.net.ru>	patch-11

    Summary:
      Faster plot background output, keypress handling
    Revision:
      python--drawing--2007--patch-11

    The function plot in background is now redrawn every time area exposes,
    it is faster than in previous version. Using pre-drawn GDK pixmap would
    be quite faster, but redrawing function plot is necessary as the window
    may be resized while plotting, so axis scales must be recalculated to
    provide correct output.
    
    Arrow key press (with Shift key) now moves the shape to the according
    direction.

    modified files:
     drawing.py glade/drawing.glade


2007-04-22 06:31:19 GMT	Dmitry Dzhus <mail@sphinx.net.ru>	patch-10

    Summary:
      Plotting function in background
    Revision:
      python--drawing--2007--patch-10

    Fucking slow for now (though using an ImageSurface as memory buffer),
    should use something else instead of masking drawing area Cairo context
    (something at GDK level?)

    modified files:
     drawing.py


2007-04-21 17:56:46 GMT	Dmitry Dzhus <mail@sphinx.net.ru>	patch-9

    Summary:
      Zooming and resizing
    Revision:
      python--drawing--2007--patch-9

    Implemented mouse wheel zooming.
    
    Window is now resizable.
    
    Now tangent angle in function-mode is calculated according to x and y
    axis scale, so shape follows the tangent correctly.

    modified files:
     ROADMAP drawing.py glade/drawing.glade shape_sign.py


2007-04-16 20:41:48 GMT	Dmitry Dzhus <mail@sphinx.net.ru>	patch-8

    Summary:
      Area redrawing issue fix
    Revision:
      python--drawing--2007--patch-8

    Found the solution to problem of forced redrawing area: using
    `gobject.timeout_add` to set up a timer and a `force_area_redraw` wrapper
    to `queue_draw()` as a corresponding timer callback.

    modified files:
     ROADMAP drawing.py glade/drawing.glade


2007-04-16 19:05:37 GMT	Dmitry Dzhus <mail@sphinx.net.ru>	patch-7

    Summary:
      Following the function
    Revision:
      python--drawing--2007--patch-7

    "Follow the function" implementation started. Currently only variable increase
    speed is customizable. There is also an option to make shape change angle
    following the function's tangent.
    
    Problems with rerendering drawing area encountered: it's impossible to
    effectively force area to redraw every x seconds calling `queue_draw()`
    in the loop somewhere.
    
    Function itself is represented as a class Func, containing all
    information for plotting. The implementation is ugly; class interface is
    quite fine, so Func may be refactored and extended in the future without
    lots of fuss.
    
    Generally, "function following" mode is unusable.
    
    Now transformations are flushed when upper tab pages are switched
    ("Affine Transforms" to "Complex Behavior").

    modified files:
     drawing.py glade/drawing.glade shape_sign.py


2007-04-16 14:18:57 GMT	Dmitry Dzhus <mail@sphinx.net.ru>	patch-6

    Summary:
      Transforms implementation advance
    Revision:
      python--drawing--2007--patch-6

    Implementation of moving, rotating and scaling is complete.
    
    Shape's class `draw` method now accepts scale, context and centerpoint
    arguments to loosen overall coupling. All space transformations are now
    applied inside the `draw` call.
    
    The expected behaviour of combination of moving basepoint and moving
    centerpoint is unclear; current behaviour will be reworked in the future
    versions. (The problem is, now "Set up a new position of shape" works as
    "Move centerpoint in device space" and "Set up a new centerpoint" works
    as "Move centerpoint but keep basepoint relatively at the same place";
    possibly "Set up a new position" should work as "Move basepoint but keep
    centerpoint at the same place in device space").
    
    Now `Base` class has `mode` property, indicating whether user is
    selecting a new centerpoint/basepoint, running a "complex behaviour" page
    or not.
    
    Implemented "Reset" menu item.

    removed files:
     .arch-ids/taxi.gif.id taxi.gif

    modified files:
     ROADMAP drawing.py glade/drawing.glade shape_sign.py


2007-04-15 13:39:45 GMT	Dmitry Dzhus <mail@sphinx.net.ru>	patch-5

    Summary:
      GUI implementation advance (fix of patch-3)
    Revision:
      python--drawing--2007--patch-5

    Implemented interface for moving and rotation (partially).
    
    Now program uses libglade to generate GUI from '.glade' files.
    
    Shape's draw method now accepts basepoint (relative to current
    centerpoint), angle and opacity. `draw()` method is now 'thread-safe',
    meaning that it restores original context transformation matrix
    (translation and rotation) after
    drawing finishes.
    
    New point - `blip` - is now stored along with `centerpoint` and
    `basepoint`. Blip is a temporary `centerpoint` and used to draw a 'ghost'
    of new shape position when moving - this is also implemented.
    
    This commit is a fix commit of patch-3, which was broken.

    new files:
     glade/.arch-ids/=id glade/.arch-ids/drawing.glade.id
     glade/drawing.glade

    removed files:
     .arch-ids/polygon.py.id polygon.py

    modified files:
     ROADMAP drawing.py shape_sign.py

    new directories:
     glade glade/.arch-ids


2007-04-15 13:10:20 GMT	Dmitry Dzhus <mail@sphinx.net.ru>	patch-4

    Summary:
      cancelled patch-3
    Revision:
      python--drawing--2007--patch-4


    modified files:
     ROADMAP drawing.py shape_sign.py


2007-04-15 12:35:07 GMT	Dmitry Dzhus <mail@sphinx.net.ru>	patch-3

    Summary:
      GUI implementation advance
    Revision:
      python--drawing--2007--patch-3

    Implemented interface for moving and rotation (partially).
    
    Now program uses libglade to generate GUI from '.glade' files.
    
    Shape's draw method now accepts basepoint (relative to current
    centerpoint), angle and opacity. `draw()` method is now 'thread-safe',
    meaning that it restores original context transformation matrix
    (translation and rotation) after
    drawing finishes.
    
    New point - `blip` - is now stored along with `centerpoint` and
    `basepoint`. Blip is a temporary `centerpoint` and used to draw a 'ghost'
    of new shape position when moving - this is also implemented.

    modified files:
     ROADMAP drawing.py shape_sign.py


2007-04-14 16:37:19 GMT	Dmitry Dzhus <mail@sphinx.net.ru>	patch-2

    Summary:
      'TAXI' sign class implemented
    Revision:
      python--drawing--2007--patch-2

    Basic version of 'TAXI' class - `ShapeSign` - implemented; `draw()`
    method draw the shape in the provided context. Drawing instructions are
    hardcoded. No transformations are performed within the `ShapeSign`:
    rotation and scaling implemented as affine transforms upon the
    corresponding Cairo matrix.

    new files:
     .arch-ids/ROADMAP.id .arch-ids/shape_sign.py.id
     .arch-ids/taxi.gif.id ROADMAP shape_sign.py taxi.gif

    modified files:
     drawing.py {arch}/=tagging-method


2007-04-13 18:03:28 GMT	Dmitry Dzhus <mail@sphinx.net.ru>	patch-1

    Summary:
      Basepoint drawing Proof of Concept
    Revision:
      python--drawing--2007--patch-1

    Polygon class has been reworked in favor to implement basepoint-relative
    polygon drawing. Now Polygon constructor accepts `center`, `radius`,
    `sides` and `shift_angle` arguments.
    
    Polygon vertices coordinaties are sequentially calculated
    counter-clockwise from the rightmost one. Polar coordinates are used,
    angle between first (rightmost) vertice position-vector and positive `x`
    direction is equal to `shift_angle`; angles between position vectors of
    adjacent vertices are equal to `360 / sides`.
    
    Effective DrawingArea rendering via pixmap should be considered to be
    implemented in the next version.

    new files:
     .arch-ids/polygon.py.id polygon.py

    modified files:
     drawing.py


2007-04-12 14:21:09 GMT	Dmitry Dzhus <mail@sphinx.net.ru>	base-0

    Summary:
      initial import
    Revision:
      python--drawing--2007--base-0

    
    (automatically generated log message)

    new files:
     drawing.py


